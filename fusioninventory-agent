#!/usr/bin/perl

#Copyright (C) 2006-2010 OCS Inventory Developers
#Copyright (C) 2010 FusionInventory Team
#
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
#USA.
#

use strict;
use warnings;

use threads;
use threads::shared;

my $devlib;
foreach (@ARGV) {
    if (/^--devlib$/) {
        print "[info] --devlib are found, Developer mode enabled\n";
        eval "use lib 'lib';";
    }
}

eval "use FusionInventory::Agent;";
if ($@) {
    print "Failed to load FusionInventory::Agent, $@\n";
    print "you can run the agent directly for its source directory ";
    print "with --devlib\n";
    exit 1;
}

eval '

my $agent = new FusionInventory::Agent;

$agent->main();

';
if ($@) {
    print "Execution failed. Are you sur the software is fully ";
    print "installed\n";
    print "and an old version of the agent not already present on the ";
    print "system?\n";
    print "___\n";
    print $@;
    exit 1;
}
__END__

=head1 NAME

fusioninventory-agent - FusionInventory agent For Linux/UNIX and MacOSX

=head1 SYNOPSIS

B<fusioninventory-agent> S<[ ... ]> S<[ I<--server server> | I<--local /tmp> ]>...

=head1 EXAMPLES

    % fusioninventory-agent --server localhost
    # send an inventory to the OCS server

    % fusioninventory-agent --server http://localhost/ocsinventory2
    # send an inventory over http to a server with a non standard
    # virtual directory

    % fusioninventory-agent --server https://localhost/ocsinventory
    # send an inventory over https to the OCS server

    % fusioninventory-agent --local /tmp
    # write an inventory in the /tmp directory

    % fusioninventory-agent --server localhost --user=toto --password=pw
--realm="Restricted Area"
    # send a report to a server protected by a basic authentication
    % fusioninventory-agent --lazy
    # send an inventory only if the a random delay between 0 and PROLOG_FREQ
had been run over.

    % fusioninventory-agent --delaytime 60 -d
    # If NO PROLOG_FREQ has been preset, pick a time between execution and
--delaytime for the agent to contact the server [default is 3600 seconds]

=head1 DESCRIPTION

F<fusioninventory-agent> creates inventory and send or write them. This agent is the
successor of the former linux_agent which was released with OCS 1.01 and prior. It also
replaces the Solaris/AIX/BSD unofficial agents. The detailed list of supported
Operating System is available in the Wiki.

=over 4

=item F<GNU/Linux>

=item F<Solaris>

=item F<FreeBSD>

=item F<NetBSD>

=item F<OpenBSD>

=item F<AIX>

=item F<MacOSX>

=item F<GNU/kFreeBSD>

=item F<HP-UX>

=back

=head1 OPTIONS

Most of the options are available in a I<short> form and a I<long> form.  For
example, the two lines below are all equivalent:

    % fusioninventory-agent -s localhost
    % fusioninventory-agent --server localhost

=over 4

=item B<--backend-collect-timeout=SECONDS_BEFORE_KILL>

Time before the agent kills modules processing which don't end before the
timeout.

=item B<--basevardir>=I<DIR>

Indicate the place where the agent should store its files.

=item B<--color>

Display color on the terminal.

=item B<-d>, B<--daemon>

Launch fusioninventory-agent as daemon in background. Proc::Daemon is needed.

=item B<-D>, B<--daemon-no-fork>

Launch fusioninventory-agent in daemon but do fork in background.

=item B<--ca-cert-dir=PATH>

The directory where public SSL certificat are stored. In general it
/etc/ssl/certs;

=item B<--ca-cert-file=FILE>

The path to the public certificat (e.g: /etc/ssl/certs/cacert.pem). If
--ca-cert-file is used, --ca-cert-dir is ignored.

=item B<--debug>

Turn the debug mode on.

=item B<--devlib>

This option is designed for the developer. With it enabled,
fusioninventory-agent won't try to load the Backend module installed
on the system. Instead it will scan the ./lib directory.
It may also be useful if you don't want to install the agent on
your system.

=item B<--delaytime=SECONDS_TO_WAIT>

This option defaults to waiting a random() time between 0 and 3600 before
initially contacting the server assuming NO PROLOG_FREQ has been set.
Once PROLOG_FREQ has been set, it uses that number at the top end of
it's random setting. Useful for pre-setting a deployed agent's initial
start time (so you don't jam the server all at once, but don't have to
wait an hour to make sure the deployment worked).

=item B<-f>, B<--force>

The agent ask first the server if it should send an inventoroy of the
machine. If the server doesn't know the machine or has outdated
informations, it will request it.
With this option, the agent ignore the server anwser and send an inventory.

=item B<-i>, B<--info>

Turn the verbose mode on. The flag is ignored if B<--debug> is enable.

=item B<--lazy>

Do not contact the server more than one time during the PROLOG_FREQ and do
an exit if there is nothing to do. Useful if you want to start the agent
script regulary from the crontab but don't want to overload the server.

=item B<-l>, B<--local>=I<DIR>

Write an inventory in the I<DIR> directory. A new file will be created if needed.

=item B<--logfile>=I<FILE>

Log message in I<FILE> and turn off STDERR

=item B<--no-ocsdeploy>

Disable the software deployment.

=item B<--no-inventory>

Do not generate inventory.

=item B<--no-wakeonlan>

Do not use the wakeonlan.

=item B<--no-software>

Do not inventory the software installed on the machine.

=item B<-p>, B<--password>=I<PASSWORD>

Use I<PASSWORD> for an HTTP identification with the server.

=item B<-P>, B<--proxy>=I<PROXY>

Use I<PROXY> to specify a proxy HTTP server. By default, the agent uses
HTTP_PROXY environment variable. 

=item B<-r>, B<--realm>=I<REALM>

Use I<REALM> for an HTTP identification with the server. For example, the
value can be 'Restricted Area'. You can find it in the login popup of your
Internet browser.

=item B<--rpc-ip>=I<IP>

The IP address of the interface to use for the P2P exchange. The default
is 'all' the IP addresses with a 255.255.255.0 mask except 127.0.0.1.

=item B<--scan-homedirs>

Should the VirtualMachine inventory include users own VM?

=item B<-s>, B<--server>=I<URI>

The uri of the server. If I<URI> doesn't start with http:// or https://, the
assume the parameter is a hostname and rewrite it like that:

    % http://servername/ocsinventory

If you want to use https or another virtual directory you need to enter the full path.

B<--server> is ignored if B<--local> is in use.

=item B<--stdout>

Print the inventory on stdout.

    % fusioninventory-agent --stdout > /tmp/report.xml
    # prepare an inventory and write it in the /tmp/report.xml file.
    # A file will be created.

=item B<--scan-homedirs>

Authorized the agent to scan home directories to increase the Virtual Machine
inventory.

=item B<--tag>=I<TAG>

Mark the machine with the I<TAG> tag. Once the initial inventory
is accepted by the server this value is ignored and you've to
change the information directly on the server. The server do so
in order to centralize the administration of the machine.

=item B<--no-ssl-check>

Do now validate HTTPS certificat with the servers. Please never use this
option in production. This is just a very bad idea.

=item B<-u> I<USER>, B<--user>=I<USER>

Use I<USER> for the server authentication.

=item B<--version>

Print the version and exit.

=item B<-w> I<DURATION>, B<--wait>=I<DURATION>

Wait before initializing the connexion with the server. If I<DURATION> equal
I<server> the agent will use the PROLOG_FREQ of the server to determine the
duration of this periode. Exactly like it would had done if it was in --daemon
mode. Else if duration is a numerical value, it will be used directly.

    % fusioninventory-agent --wait 5 --server localhost

=back


=head1 CONFIG FILE

The agent try to initialize the settings from the B<agent.cfg>
config file.

It looks for the file in these location:

=over

=item /etc/fusioninventory/agent.cfg

=item /usr/local/etc/fusioninventory/agent.cfg

=back

=head1 AUTHORS

The maintainer is Goneri LE BOUDER <goneri@rulezlan.org>

Please read the AUTHORS, Changes and THANKS files to see who is behind
FusionInventory.

=head1 SEE ALSO

=over 4

=item FusionInventory website: L<http://www.FusionInventory.org/>

=item LaunchPad project page: L<http://launchpad.net/fusioninventory-agent>

=item the Mailing lists and IRC

=back

=head1 BUGS

Please, use the mailing lists as much as possible. You can open your own bug
tickets. Patches are welcome. You can also use LaunchPad bugtracker or
push your Bazaar branch on LaunchPad and do a merge request.

=head1 COPYRIGHT

Copyright (C) 2006-2010 OCS Inventory contributors
Copyright (C) 2010 FusionInventory Team

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

=cut
